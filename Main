#include <stdio.h>
#include <stdbool.h>
    int caixaemenda, pigtail, cordaoopt, acoplaopt, terminadoropt, caboopt, rack, pgtto, andar;
    int pav, pontos, cftv, voip, fibra, cutp, s, dio, dist, oms, dvr, rdvr;
    int i, tpq, w, h, z, y;
    int pontot, cat;
    int tamRack[] = {4, 6, 8, 10, 12, 14, 16, 20, 24, 28, 32, 36, 40, 44, 48};
#define QUANTIDADE_TAMANHOS_RACK_DISPONIVEIS 15
void padrao();

void malha();

void backbone();

void padraobackbone();

int main() {
    printf("Vamos Começar nossa Quantificação de Material.\n");
    
    
    
    do{
        printf("\nInsira o numero que corresponde ao tipo de Quantificação de Material que deseja fazer:\n 1 - Apenas Malha Horizontal\n 2 - Apenas BackBone\n 3 - Ambos\n");
        printf("\nNúmero: ");
        scanf("%d", &tpq);
        
        if(tpq==1){
            padrao();
            malha();
            
        } else if(tpq==2){
            padraobackbone();
            backbone();
            
        } else if(tpq==3){
            padrao();
            malha();
            backbone();
            
        } else{
            printf("\nInsira um número dentro dos parametros.\n");
            }
    } while(tpq>3 || tpq<1);
    
    
    return 0;
}

void padrao(){
    printf("\nQuantos pavimentos existem?\n");
    scanf("%d", &pav);
    
    printf("Quantos pontos de telecom por pavimentos existem?\n");
    scanf("%d", &pontos);
    
    printf("Quantos desses pontos são de CFTV?\n");
    scanf("%d", &cftv);
    
    printf("Quantos desses pontos são de VoIP?\n");
    scanf("%d", &voip);
    
    pontot = pontos * 2;
    
    s = ((pontot  * pav)/24) + 1;
}
void padraobackbone(){
    printf("\nQuantos pavimentos existem?\n");
    scanf("%d", &pav);
    
    printf("Tem a disciplina de CFTV?\n 1 - Sim\n 2 - Não\n");
    scanf("%d", &cftv);
    
    printf("Tem a disciplina de VoIP?\n1 - Sim\n 2 - Não\n");
    scanf("%d", &voip);
    
    if(cftv == 1){
        cftv = 10;
    } else if(cftv == 2){
        cftv = 0;
    }
    
     if(voip == 1){
        voip = 10;
    } else if(voip == 2){
        voip = 0;
    }
}
void malha(){
    printf("\nQual a distancia da malha horizontal?\n");
    scanf("%d", &dist);
    cutp = ((pontot  * pav)* dist);
    h = cutp/305;
    w = h*305;
    if(cutp>w){
        cutp = h+1;
        } else{
        cutp = h;
    }
    do{
        printf("\nInsira o numero que corresponde a categoria de cabo que deseja fazer:\n 1 - Cat 5\n 2 - Cat 5e\n 3 - Cat 6\n 4 - Cat 6a\n 5 - Cat 7\n");
        printf("\nNúmero: ");
        scanf("%d", &cat);
         if(cat > 5){
            printf("\nInsira um número dentro dos parametros.\n");
            }
    } while(cat>5 || cat<1);
    
    printf("\n");
    printf("----------------------------------------\n" );
    printf("MALHA HORIZONTAL\n");
    printf("Tomadas RJ-45: %d\n", pontot * pav);
    
    if(cat == 1){
        printf("Patch Cord, Categoria 5, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat == 2){
        printf("Patch Cord, Categoria 5e, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat==3){
        printf("Patch Cord, Categoria 6, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat==4){
        printf("Patch Cord, Categoria 6a, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat == 5){
        printf("Patch Cord, Categoria 7, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    }
    
    
    if( cftv > 0 && cat == 1){
        printf("Patch Cord, Categria 5 da mesma cor do teto: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 2){
        printf("Patch Cord, Categria 5e da mesma cor do teto: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 3){
        printf("Patch Cord, Categria 6 da mesma cor do teto: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 4){
        printf("Patch Cord, Categria 6a da mesma cor do teto: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 5){
        printf("Patch Cord, Categria 7 da mesma cor do teto: %d \n", cftv * pav);
    }
    
    
    if( voip > 0 && cat == 1){
        printf("Patch Cord, Categoria 5, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 2){
        printf("Patch Cord, Categoria 5e, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 3){
        printf("Patch Cord, Categoria 6, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 4){
        printf("Patch Cord, Categoria 6a, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 5){
        printf("Patch Cord, Categoria 7, cor Amarela: %d \n", voip * pav);
    } 
    
    
    printf("Espelho 4x2: %d\n", pontos  * pav);
    printf("Etiquetas para identificação de tomadas e espelho: %d\n", (pontos * pav) + (pontot * pav));
    printf("Cabo UTP: %d caixas de 305 metros \n", cutp);
    printf("Switch 24 portas: %d\n", s);
    printf("Patch Panel 24 portas: %d\n", s);
  
    if(cat == 1){
        printf("Patch Cord, Categoria 5, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat == 2){
        printf("Patch Cord, Categoria 5e, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat==3){
        printf("Patch Cord, Categoria 6, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat==4){
        printf("Patch Cord, Categoria 6a, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    } else if(cat == 5){
        printf("Patch Cord, Categoria 7, cor Azul: %d\n", ((pontot - cftv) - voip )* pav);
    }
    
    
    if( cftv > 0 && cat == 1){
        printf("Patch Cord, Categria 5, cor Vermelha: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 2){
        printf("Patch Cord, Categria 5e, cor Vermelha: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 3){
        printf("Patch Cord, Categria 6, cor Vermelha: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 4){
        printf("Patch Cord, Categria 6a, cor Vermelha: %d \n", cftv * pav);
    } else if( cftv > 0 && cat == 5){
        printf("Patch Cord, Categria 7, cor Vermelha: %d \n", cftv * pav);
    }
    
    
    if( voip > 0 && cat == 1){
        printf("Patch Cord, Categoria 5, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 2){
        printf("Patch Cord, Categoria 5e, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 3){
        printf("Patch Cord, Categoria 6, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 4){
        printf("Patch Cord, Categoria 6a, cor Amarela: %d \n", voip * pav);
    } else if( voip > 0 && cat == 5){
        printf("Patch Cord, Categoria 7, cor Amarela: %d \n", voip * pav);
    } 
    printf("Bandeja Deslizante: %d\n", pav);
    printf("Bandeja Fixa: %d\n", pav);
    if( voip > 0){
      dvr = ((voip  * pav)/48) + 1;
    }
    
    
    z=((s + s + (s*2) + pav))*1,5;
    printf("Rack para o Malha Horizontal de tamanho: %dU\n", z);
}

void backbone(){
    do{printf("\nInsera um numero de acordo com o tipo de fibra optica a ser utilizado:?\n 1 - Monomodo(SM - OS1)\n 2 - Monomodo(SM - OS2)\n 3 - Multimodo(MM - OM1)\n 4 - Multimodo(MM - OM2)\n 5 - Multimodo(MM - OM3)\n 6 - Multimodo(MM - OM4)\n 7 - Multimodo(MM - OM5)\n");
    printf("\nNúmero: ");
    scanf("%d", &oms);
    if(oms>7 || oms<1){
        printf("\nInsira um número dentro dos parametros.\n");
    }
    } while(oms>7 || oms<1);
    printf("\n");
    printf("----------------------------------------\n" );
    printf("BACKBONE\n");
    fibra = 4;
    if(voip > 0 ){
        fibra += 4;
    }
    if(cftv > 0){
        fibra += 4;
    }
    printf("Quantidade de fibra por andar: %d\n", fibra);
    printf("Quantidade de fibra total: %d\n", fibra * pav);
    dio = ((fibra * pav)/ 24) + 1;
    printf("Distribuidor óptico (DIO): %d\n", dio);
    printf("Caixa de emenda: %d\n", pav);
    pigtail = fibra;
    if(oms==1){
        printf("Pig tail SM 9x125 – duplo – 2m – azul: %d\n", pigtail);
    } else if(oms==2){
        printf("Pig tail SM 9x125 – duplo – 2m – azul: %d\n", pigtail);
    } else if(oms==3){
         printf("Pig tail MM 62,5x125 – duplo – 2m – laranja: %d\n", pigtail);
    } else if(oms>=4){
         printf("Pig tail MM 50x125 – duplo – 2m – laranja: %d\n", pigtail);
    }
    
    acoplaopt = fibra * pav;
    printf("Acoplador Optico: %d\n", acoplaopt);
    cordaoopt = fibra * pav;
    printf("Cordão Optico: %d\n", cordaoopt);
    
    int x;
    x = 15;
   
    if(pav >= 2){
        for(int i = 2; i <= pav ; i++){
        x = x + 5;
        
        }
    }
    x = x + ((x * 20)/100);
    if(oms==1){
        printf("Cabo Optico SM – OS1 - 9x125 – Tight buffer: %d\n", x );
    } else if(oms==2){
        printf("Cabo Optico SM – OS2 - 9x125 – Tight buffer: %d\n", x );
    }else if(oms==3){
        printf("Cabo Optico MM – OM1 - 62,5x125 – Tight buffer: %d\n", x );
    } else if(oms==4){
        printf("Cabo Optico MM – OM2 - 50x125 – Tight buffer: %d\n", x );
    }else if(oms==5){
        printf("Cabo Optico MM – OM3 - 50x125 – Tight buffer: %d\n", x );
    } else if(oms==6){
        printf("Cabo Optico MM – OM4 - 50x125 – Tight buffer: %d\n", x );
    }else if(oms==7){
        printf("Cabo Optico MM – OM5 - 50x125 – Tight buffer: %d\n", x );
    }
    
    y=(dio + dio  )*1.5;
    

    
        for (int i = 0; i < QUANTIDADE_TAMANHOS_RACK_DISPONIVEIS; i++){
            if (y < tamRack[i]){
                y = tamRack[i];
                break;
            }
        }
    
    printf("Rack para o Backbone de tamanho: %dU\n", y);
}
